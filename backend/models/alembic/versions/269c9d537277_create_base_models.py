# pylint: disable-all
"""Create base models

Revision ID: 269c9d537277
Revises: 
Create Date: 2025-04-04 02:09:01.693761

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '269c9d537277'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('participantsAttempt')
    op.drop_table('contest_results')
    op.drop_table('users')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
                    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"),
                              autoincrement=True, nullable=False),
                    sa.Column('login', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
                    sa.Column('password', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
                    sa.Column('codeforces_api_key', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
                    sa.Column('codeforces_api_secret', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
                    sa.Column('yandex_access_token', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
                    sa.Column('telegram_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
                    sa.PrimaryKeyConstraint('id', name='users_pkey'),
                    sa.UniqueConstraint('login', name='users_login_key'),
                    postgresql_ignore_search_path=False
                    )
    op.create_table('contest_results',
                    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('result_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False,
                              nullable=True),
                    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='contest_results_user_id_fkey'),
                    sa.PrimaryKeyConstraint('id', name='contest_results_pkey')
                    )
    op.create_table('participantsAttempt',
                    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('result_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False,
                              nullable=True),
                    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='participantsAttempt_user_id_fkey'),
                    sa.PrimaryKeyConstraint('id', name='participantsAttempt_pkey')
                    )
    # ### end Alembic commands ###
