name: "CI Workflow"

on:
  pull_request:
    branches: [ main ]

env:
  CODEFORCES_TEST_KEY: ${{ secrets.CODEFORCES_TEST_KEY }}
  CODEFORCES_TEST_SECRET: ${{ secrets.CODEFORCES_TEST_SECRET }}
  CODEFORCES_HOST: ${{ secrets.CODEFORCES_HOST }}

  YANDEX_CLIENT_ID: ${{ secrets.YANDEX_CLIENT_ID }}
  YANDEX_CLIENT_SECRET: ${{ secrets.YANDEX_CLIENT_SECRET }}
  YANDEX_HOST: ${{ secrets.YANDEX_HOST }}
  YANDEX_TEST_OAUTH: ${{ secrets.YANDEX_TEST_OAUTH }}

  DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
  DATABASE_USER: ${{ secrets.DATABASE_USER }}
  DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}

  REDIRECT_URI: ${{ secrets.REDIRECT_URI }}

jobs:
  lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [ "3.10" ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install linter dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint

      - name: Run Pylint
        run: |
          pylint --disable=C0111,R0801,W1203,R1721,R0903 --max-line-length=120 $(git ls-files '*.py')

  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [ "3.10" ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run Tests
        run: |
          pytest